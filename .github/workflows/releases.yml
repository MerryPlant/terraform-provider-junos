name: Release
on:
  push:
    tags:
      - "v*"
jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set env RELEASE_VERSION
        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF} | cut -d'/' -f3)
      - name: Set env MESSAGE
        run: echo ::set-env name=MESSAGE::$(git tag -l --format='%(contents)' ${RELEASE_VERSION})
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ env.RELEASE_VERSION }}
          body: ${{ env.MESSAGE }}
          draft: false
          prerelease: false

  assets:
    name: Push assets for ${{ matrix.goos }}/${{ matrix.goarch }}
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, windows/386, windows/amd64, darwin/386, darwin/amd64
        goos: [linux, windows, darwin]
        goarch: ["386", amd64]
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code
        uses: actions/checkout@v2
      - name: Set env
        run: |
          echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF} | cut -d'/' -f3)
          echo ::set-env name=REPO_NAME::$(echo ${GITHUB_REPOSITORY} | cut -d'/' -f2)
          echo ::set-env name=GOOS::$(echo ${{ matrix.goos }})
          echo ::set-env name=GOARCH::$(echo ${{ matrix.goarch }})
      - name: Get dependencies
        run: |
          go get -v -t -d ./...
      - name: Build
        run: go build -o ${REPO_NAME}_${RELEASE_VERSION}
      - name: Create archive
        run: tar -czvf ${REPO_NAME}_${RELEASE_VERSION}_${{ matrix.goos }}_${{ matrix.goarch }}.tar.gz ${REPO_NAME}_${RELEASE_VERSION}
      - name: Upload archive to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./${{ env.REPO_NAME }}_${{ env.RELEASE_VERSION }}_${{ matrix.goos }}_${{ matrix.goarch }}.tar.gz
          asset_name: ${{ env.REPO_NAME }}_${{ env.RELEASE_VERSION }}_${{ matrix.goos }}_${{ matrix.goarch }}.tar.gz
          tag: ${{ github.ref }}
